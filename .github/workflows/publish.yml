name: Publish

on:
  push:
    branches: [ master ]

jobs:
  publish:
    if: contains(github.event.head_commit.message, 'chore(release)') == false

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.PAT_TOKEN }}
          fetch-depth: 0
      - uses: actions/setup-node@v1
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'
      - run: yarn install --pure-lockfile
      - run: yarn build
      - name: setup git config
        run: |
          git config --global user.name "standardci"
          git config --global user.email "ci@standardnotes.com"
      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v4
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true
      - name: check if decrypt package changed
        id: decrypt_check
        run: echo ::set-output name=decrypt_changed::$(npx lerna changed | grep "@standardnotes/decrypt")
      - run: yarn version-bump
      - run: yarn publish-packages
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - uses: jakejarvis/s3-sync-action@master
        if: ${{ steps.decrypt_check.outputs.decrypt_changed == 0 }}
        with:
          args: --acl public-read --follow-symlinks --delete
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_DOWNLOADS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SOURCE_DIR: ./packages/decrypt/dist/decrypt.html
      - name: Invalidate CloudFront Cache
        if: ${{ steps.decrypt_check.outputs.decrypt_changed == 0 }}
        uses: chetan/invalidate-cloudfront-action@master
        env:
          DISTRIBUTION: ${{ secrets.DOWNLOADS_DISTRIBUTION }}
          PATHS: '/*'
          AWS_REGION: 'us-east-1'
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}


  git-sync:
    needs: publish

    runs-on: ubuntu-latest

    steps:
      - name: git-sync
        uses: wei/git-sync@v3
        with:
          source_repo: "standardnotes/snjs"
          source_branch: "refs/remotes/source/*"
          destination_repo: "standardnotes/private-snjs"
          destination_branch: "refs/heads/*"
          ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}

  notify_discord:
    needs: publish
    if: contains(github.event.head_commit.message, 'chore(release)') == false

    runs-on: ubuntu-latest

    steps:
    - name: Run Discord Webhook
      uses: johnnyhuy/actions-discord-git-webhook@main
      with:
        webhook_url: ${{ secrets.DISCORD_WEBHOOK_URL }}
        censor_username: false
